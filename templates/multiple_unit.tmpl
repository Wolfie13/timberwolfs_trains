{{ $zoom := parseint .globals.zoom }}


{{- $layout := slice .layout -}}
{{- $newsprites := slice .new_sprites -}}
{{- $len := .ttd_len -}}{{- $bpp := .globals.bpp -}}

{{- range $index, $element := $layout -}}
{{- $newsprite := index $newsprites $index -}}
{{- if eq $newsprite "1" -}}
{{$template := concat "template_rail_" $len -}}
{{if eq $bpp "32"}}{{ altsprites $element $template $zoom }}{{else}}{{ altsprites8 $element $template $zoom }}{{end}}
{{end -}}
{{end}}

{{- $type := .type }}{{$id := .id}}{{$pantograph_unit := .pantograph_unit -}}
{{ if eq .type "dual_electric" -}}
{{ $template := concat "template_rail_" .ttd_len -}}
{{ $pan_up := concat $pantograph_unit "_pan_up" }}{{ altsprites8 $pan_up $template $zoom }}
{{ $pan_down := concat $pantograph_unit "_pan_down" }}{{ altsprites8 $pan_down $template $zoom }}
{{end}}

// Articulation
switch(FEAT_TRAINS, SELF, switch_{{.id}}_articulation, extra_callback_info1) {
    0 .. ({{.cars}} * 3) - 1: vehicle_{{.id}};
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

// Currently all parts of an MU must be the same length
switch (FEAT_TRAINS, SELF, switch_{{.id}}_length, position_in_articulated_veh % 3 ) 
{
    {{range $index, $element := slice .articulated_lengths -}}
    {{$index }}: return {{ $element }};
    {{end}}    
}


{{ if eq .type "dual_electric" -}}
switch (FEAT_TRAINS, SELF, switch_{{.id}}_pantograph_state, current_railtype) 
{
    ELRL: return spriteset_{{.pantograph_unit}}_pan_up;
    SAAZ: return spriteset_{{.pantograph_unit}}_pan_up;
    return spriteset_{{.pantograph_unit}}_pan_down;
}


switch(FEAT_TRAINS, SELF, switch_{{.id}}_pantograph, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: spriteset_{{.pantograph_unit}};
    1: switch_{{.id}}_pantograph_state;

    // This should never be executed
    return spriteset_invisible;
}
{{end}}

switch (FEAT_TRAINS, SELF, switch_{{.id}}_graphics, position_in_articulated_veh % ({{.cars}} * 3)) 
{
    {{range $index, $element := $layout -}}
    {{- if eq $type "dual_electric"}}
    ({{$index}} * 3) + 1: {{if eq $element $pantograph_unit }}return switch_{{$id}}_pantograph{{else}}return spriteset_{{$element}}{{end}};
    {{- else }}
    ({{$index}} * 3) + 1: return spriteset_{{$element}};
    {{- end}}
    {{end}}
    return spriteset_invisible;
}


// Visual effect
switch (FEAT_TRAINS, SELF, switch_{{.id}}_visual_effect, position_in_articulated_veh % ({{.cars}}  * 3)) 
{ 
    {{ if eq .type "steam" -}}
    0: return visual_effect(VISUAL_EFFECT_STEAM, -1);
    {{ else if eq .type "electric" -}}
    1: return visual_effect(VISUAL_EFFECT_ELECTRIC, 0);
    {{ else if eq .type "dual_electric" -}}
    1: return visual_effect(VISUAL_EFFECT_ELECTRIC, 0);
    {{else -}}
    1: return visual_effect(VISUAL_EFFECT_DIESEL, 0);
    {{- end}}
    return VISUAL_EFFECT_DISABLE;
}

item(FEAT_TRAINS, vehicle_{{.id}}) {
    property {
        name:                         {{.name_string}};
        climates_available:           bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL);
        introduction_date:            date({{.year}}, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 30;

        {{ if eq .type "steam" -}}
        engine_class:                 ENGINE_CLASS_STEAM;
        running_cost_base:            RUNNING_COST_STEAM;
        {{ else if eq .type "electric" -}}
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        running_cost_base:            RUNNING_COST_ELECTRIC;
        {{else -}}
        engine_class:                 ENGINE_CLASS_DIESEL;
        running_cost_base:            RUNNING_COST_DIESEL;
        {{- end}}

        tractive_effort_coefficient:  {{.te_coeff}};

        power:                        {{.power}} hp;
        speed:                        {{.speed}} mph;
        reliability_decay:            20;
        {{if .loading_speed}}loading_speed:                {{.loading_speed}};{{end}}
        cost_factor:                  {{.cost}};
        running_cost_factor:          {{.running_cost}};
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_MU {{if eq .type "dual_electric"}}, TRAIN_FLAG_SPRITE_STACK{{end}});
        refit_cost:                   0;
        track_type:                   {{.railtype}};

        {{if .capacity}}
        cargo_capacity:               {{.capacity}} / 3;
        default_cargo_type:           {{.default_cargo}};
        {{end}}
        weight:                       {{.weight}} ton;
        
    }

    graphics {
        default:  switch_{{.id}}_graphics;
        additional_text: return {{.additional_text_string}};
        articulated_part: switch_{{.id}}_articulation;
        length: switch_{{.id}}_length;
        visual_effect_and_powered: switch_{{.id}}_visual_effect;
        {{if .capacity}}purchase_cargo_capacity: spriteset_{{.id}};{{end}}
    }
}
