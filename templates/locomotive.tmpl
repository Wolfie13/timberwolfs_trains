{{ $zoom := parseint .globals.zoom }}
{{$template := concat "template_auto_" .ttd_len -}}

{{ if not .reuse_sprites -}}
{{if eq .globals.bpp "32"}}{{ altsprites .id $template $zoom }}{{else}}{{ altsprites8 .id $template $zoom }}{{end}}

{{$template_turn := concat "template_auto_turn_1_" .ttd_len -}}
{{if eq .globals.bpp "32"}}{{ altspritesn .id $template_turn $zoom "_turn_1" }}{{else}}{{ altsprites8n .id $template_turn $zoom "_turn_1" }}{{end}}

{{$template_turn = concat "template_auto_turn_2_" .ttd_len -}}
{{if eq .globals.bpp "32"}}{{ altspritesn .id $template_turn $zoom "_turn_2" }}{{else}}{{ altsprites8n .id $template_turn $zoom "_turn_2" }}{{end}}


// Graphics - animated or not
{{ if .animated -}}
{{ $ani := concat .id "_anim_1" }}{{ altsprites8 $ani $template $zoom }}
{{$template_turn := concat "template_auto_turn_1_" .ttd_len -}}{{ altspritesn $ani $template_turn $zoom "_turn_1" }}
{{$template_turn := concat "template_auto_turn_2_" .ttd_len -}}{{ altspritesn $ani $template_turn $zoom "_turn_2" }}
{{ $ani := concat .id "_anim_2" }}{{ altsprites8 $ani $template $zoom }}
{{$template_turn := concat "template_auto_turn_1_" .ttd_len -}}{{ altspritesn $ani $template_turn $zoom "_turn_1" }}
{{$template_turn := concat "template_auto_turn_2_" .ttd_len -}}{{ altspritesn $ani $template_turn $zoom "_turn_2" }}
{{ $ani := concat .id "_anim_3" }}{{ altsprites8 $ani $template $zoom }}
{{$template_turn := concat "template_auto_turn_1_" .ttd_len -}}{{ altspritesn $ani $template_turn $zoom "_turn_1" }}
{{$template_turn := concat "template_auto_turn_2_" .ttd_len -}}{{ altspritesn $ani $template_turn $zoom "_turn_2" }}
{{ $ani := concat .id "_anim_4" }}{{ altsprites8 $ani $template $zoom }}
{{$template_turn := concat "template_auto_turn_1_" .ttd_len -}}{{ altspritesn $ani $template_turn $zoom "_turn_1" }}
{{$template_turn := concat "template_auto_turn_2_" .ttd_len -}}{{ altspritesn $ani $template_turn $zoom "_turn_2" }}
{{- else if .double_headed -}}
{{$rev := concat .id "_rev" }}
{{if eq .globals.bpp "32"}}{{ altsprites $rev $template $zoom }}{{else}}{{ altsprites8 $rev $template $zoom }}{{end}}

{{$template_turn := concat "template_auto_turn_1_" .ttd_len -}}
{{if eq .globals.bpp "32"}}{{ altspritesn $rev $template_turn $zoom "_turn_1" }}{{else}}{{ altsprites8n $rev $template_turn $zoom "_turn_1" }}{{end}}

{{$template_turn = concat "template_auto_turn_2_" .ttd_len -}}
{{if eq .globals.bpp "32"}}{{ altspritesn $rev $template_turn $zoom "_turn_2" }}{{else}}{{ altsprites8n $rev $template_turn $zoom "_turn_2" }}{{end}}

{{- end}}
{{- end }}

{{- $type := .type }}{{ $id := .id}}
{{ if eq .type "dual_electric" -}}{{template "pantograph_graphics" . }}{{end}}

{{ if not .reuse_sprites }}{{template "curve_switch" .id }}{{end}}
{{ if .double_headed }}{{$rev := concat .id "_rev"}}{{template "curve_switch" $rev }}{{end}}

// Articulation
switch(FEAT_TRAINS, SELF, switch_{{.id}}_articulation, extra_callback_info1) {
    0 .. {{if .tender}}5{{else}}2{{end}}: vehicle_{{.id}};
    return CB_RESULT_NO_MORE_ARTICULATED_PARTS;
}

switch (FEAT_TRAINS, SELF, switch_{{.id}}_length, position_in_articulated_veh % {{if .tender}}6{{else}}3{{end}}) 
{
    {{range $index, $element := slice .articulated_lengths -}}
    {{$index }}: return {{ $element }};
    {{end}}    
}

{{ if eq .type "dual_electric" -}}
{{template "pantograph_switch" . }}
{{end}}

{{ $sprite := .id}}{{ if .reuse_sprites }}{{ $sprite = .reuse_sprites }}{{end -}}
{{ if .animated -}}

{{ if not .reuse_sprites }}
{{$anim := concat $sprite "_anim_1" }}{{template "curve_switch" $anim  }}
{{$anim := concat $sprite "_anim_2" }}{{template "curve_switch" $anim  }}
{{$anim := concat $sprite "_anim_3" }}{{template "curve_switch" $anim  }}
{{$anim := concat $sprite "_anim_4" }}{{template "curve_switch" $anim  }}
{{end}}

switch (FEAT_TRAINS, SELF, switch_{{.id}}_animation, motion_counter % 4) 
{
    0: return switch_{{$sprite}}_anim_1_curve;
    1: return switch_{{$sprite}}_anim_2_curve;
    2: return switch_{{$sprite}}_anim_3_curve;
    3: return switch_{{$sprite}}_anim_4_curve;
}

switch(FEAT_TRAINS, SELF, switch_{{.id}}_animation_overlay, [
    STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 1 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100),
    getbits(extra_callback_info1, 8, 8)
    ]) {
    0: switch_{{$sprite}}_curve;
    1: switch_{{.id}}_animation;

    // This should never be executed
    return spriteset_invisible;
}

switch (FEAT_TRAINS, SELF, switch_{{.id}}_graphics, position_in_articulated_veh % {{if .tender}}6{{else}}3{{end}}) 
{
    1: switch_{{.id}}_animation_overlay;
    {{- if .tender }}
    4: return switch_{{.tender}}_curve;
    {{- end}}
    return spriteset_invisible;
}

{{else if .double_headed -}}
switch (FEAT_TRAINS, SELF, switch_{{.id}}_fwd_graphics, position_in_articulated_veh % 3) 
{
    1: return switch_{{.id}}_curve;
    return spriteset_invisible;
}

switch (FEAT_TRAINS, SELF, switch_{{.id}}_rev_graphics, position_in_articulated_veh % 3) 
{
    1: return switch_{{.id}}_rev_curve;
    return spriteset_invisible;
}

switch (FEAT_TRAINS, SELF, switch_{{.id}}_reverse, position_in_consist_from_end != 1 || position_in_consist < 2) {
    1: return switch_{{.id}}_fwd_graphics;
    return switch_{{.id}}_rev_graphics;
}

switch (FEAT_TRAINS, SELF, switch_{{.id}}_graphics, position_in_articulated_veh % 3) 
{
    1: return switch_{{.id}}_reverse;
    return spriteset_invisible;
}
{{else -}}
switch (FEAT_TRAINS, SELF, switch_{{.id}}_graphics, position_in_articulated_veh % {{if .tender}}6{{else}}3{{end}}) 
{
    1: {{if eq $type "dual_electric"}}return switch_{{$id}}_pantograph{{else}}return switch_{{$sprite}}_curve{{end}};
    {{- if .tender }}
    4: return switch_{{.tender}}_curve;
    {{- end}}
    return spriteset_invisible;
}
{{- end}}

{{ if eq .type "dual_power" -}}
switch (FEAT_TRAINS, SELF, switch_{{.id}}_power, current_railtype) {
    ELRL: return {{.secondary_power}};
    RAIL: return {{.secondary_power}};
    return {{.power}};
}

switch (FEAT_TRAINS, SELF, switch_{{.id}}_visual_effect_railtype, current_railtype) {
    ELRL: return visual_effect(VISUAL_EFFECT_DIESEL, 0);
    RAIL: return visual_effect(VISUAL_EFFECT_DIESEL, 0);
    return visual_effect(VISUAL_EFFECT_ELECTRIC, 0);
}
{{end}}
{{ if eq .type "dual_electric" -}}
switch (FEAT_TRAINS, SELF, switch_{{.id}}_power, current_railtype) {
    ELRL: return {{.power}};
    SAAZ: return {{.power}};
    return {{.secondary_power}};
}
{{ end }}

// Visual effect
switch (FEAT_TRAINS, SELF, switch_{{.id}}_visual_effect, position_in_articulated_veh % {{if .tender}}6{{else}}3{{end}}) 
{ 
    {{ if eq .type "steam" -}}
    0: return visual_effect(VISUAL_EFFECT_STEAM, -1);
    {{ else if eq .type "electric" -}}
    1: return visual_effect(VISUAL_EFFECT_ELECTRIC, 0);
    {{ else if eq .type "dual_power" -}}
    1: return switch_{{.id}}_visual_effect_railtype;
    {{else -}}
    1: return visual_effect(VISUAL_EFFECT_DIESEL, 0);
    {{- end}}
    return VISUAL_EFFECT_DISABLE;
}

item(FEAT_TRAINS, vehicle_{{.id}}) {
    property {
        name:                         {{.name_string}};
        climates_available:           bitmask(CLIMATE_TEMPERATE, CLIMATE_ARCTIC, CLIMATE_TROPICAL, CLIMATE_TOYLAND);
        introduction_date:            date({{.year}}, 1, 1);
        model_life:                   VEHICLE_NEVER_EXPIRES;
        vehicle_life:                 30;

        {{ if eq .type "steam" -}}
        engine_class:                 ENGINE_CLASS_STEAM;
        running_cost_base:            RUNNING_COST_STEAM;
        {{ else if eq .type "electric" -}}
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        running_cost_base:            RUNNING_COST_ELECTRIC;
        {{else -}}
        engine_class:                 ENGINE_CLASS_DIESEL;
        running_cost_base:            RUNNING_COST_DIESEL;
        {{- end}}

        tractive_effort_coefficient:  {{.te_coeff}};

        power:                        {{.power}} hp;
        speed:                        {{.speed}} mph;
        reliability_decay:            20;
        {{if .loading_speed}}loading_speed:                {{.loading_speed}};{{end}}
        cost_factor:                  {{.cost}};
        running_cost_factor:          {{.running_cost}};
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
        misc_flags:                   bitmask(TRAIN_FLAG_2CC {{if .animated}}, TRAIN_FLAG_SPRITE_STACK{{end}}{{if eq .type "dual_electric"}}, TRAIN_FLAG_SPRITE_STACK{{end}});
        refit_cost:                   0;
        track_type:                   {{.railtype}};

        {{if .capacity}}
        cargo_capacity:               {{.capacity}} / 3;
        default_cargo_type:           {{.default_cargo}};
        {{end}}
        weight:                       {{.weight}} {{if .tender_weight}} + {{.tender_weight}} {{end}} ton;
        
    }

    graphics {
        default:  switch_{{.id}}_graphics;
        purchase:  spriteset_{{$sprite}};
        additional_text: return {{.additional_text_string}};
        articulated_part: switch_{{.id}}_articulation;
        length: switch_{{.id}}_length;
        visual_effect_and_powered: switch_{{.id}}_visual_effect;
        {{ if eq .type "dual_power" -}}power: switch_{{.id}}_power;{{end}}{{ if eq .type "dual_electric" -}}power: switch_{{.id}}_power;{{end}}
        {{if .capacity}}purchase_cargo_capacity: spriteset_{{.id}};{{end}}
    }
}
